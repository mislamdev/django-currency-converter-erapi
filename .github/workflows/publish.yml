name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      repository:
        description: 'Repository to publish from'
        required: false
        default: '.'
      target:
        description: 'Target index: pypi or testpypi'
        required: true
        default: 'pypi'
        type: choice
        options:
          - pypi
          - testpypi

jobs:
  build-and-publish:
    name: Build, test, and publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements-dev.txt
            setup.py

      - name: Install build and dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install build twine

      - name: Run tests
        run: |
          pytest --maxfail=1 -q

      - name: Build distribution
        run: |
          python -m build

      - name: Verify distribution
        run: |
          twine check dist/*

      - name: Publish to TestPyPI (token)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.target == 'testpypi' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*

#      - name: Publish to PyPI (token)
#        if: ${{ github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && inputs.target == 'pypi') }}
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
#        run: |
#          python -m twine upload dist/*
